//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.DancingGoatCore;

[assembly: RegisterDocumentType(Coffee.CLASS_NAME, typeof(Coffee))]

namespace CMS.DocumentEngine.Types.DancingGoatCore
{
	/// <summary>
	/// Represents a content item of type Coffee.
	/// </summary>
	public partial class Coffee : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DancingGoatCore.Coffee";


		/// <summary>
		/// The instance of the class that provides extended API for working with Coffee fields.
		/// </summary>
		private readonly CoffeeFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// CoffeeID.
		/// </summary>
		[DatabaseIDField]
		public int CoffeeID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("CoffeeID"), 0);
			}
			set
			{
				SetValue("CoffeeID", value);
			}
		}


		/// <summary>
		/// CoffeeShortDescription.
		/// </summary>
		[DatabaseField]
		public string CoffeeShortDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CoffeeShortDescription"), @"");
			}
			set
			{
				SetValue("CoffeeShortDescription", value);
			}
		}


		/// <summary>
		/// CoffeeDescription.
		/// </summary>
		[DatabaseField]
		public string CoffeeDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CoffeeDescription"), @"");
			}
			set
			{
				SetValue("CoffeeDescription", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Coffee fields.
		/// </summary>
		[RegisterProperty]
		public CoffeeFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Coffee fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class CoffeeFields : AbstractHierarchicalObject<CoffeeFields>
		{
			/// <summary>
			/// The content item of type Coffee that is a target of the extended API.
			/// </summary>
			private readonly Coffee mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="CoffeeFields" /> class with the specified content item of type Coffee.
			/// </summary>
			/// <param name="instance">The content item of type Coffee that is a target of the extended API.</param>
			public CoffeeFields(Coffee instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// CoffeeID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.CoffeeID;
				}
				set
				{
					mInstance.CoffeeID = value;
				}
			}


			/// <summary>
			/// CoffeeShortDescription.
			/// </summary>
			public string ShortDescription
			{
				get
				{
					return mInstance.CoffeeShortDescription;
				}
				set
				{
					mInstance.CoffeeShortDescription = value;
				}
			}


			/// <summary>
			/// CoffeeDescription.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.CoffeeDescription;
				}
				set
				{
					mInstance.CoffeeDescription = value;
				}
			}


			/// <summary>
			/// CoffeeImage.
			/// </summary>
			public IEnumerable<TreeNode> Image
			{
				get
				{
					return (mInstance.LinkedContentItems["CoffeeImage"]);
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Coffee" /> class.
		/// </summary>
		public Coffee() : base(CLASS_NAME)
		{
			mFields = new CoffeeFields(this);
		}

		#endregion
	}
}