@using Kentico.Xperience.Lucene.Core.Search
@using DancingGoat.Search
@using Microsoft.AspNetCore.Mvc.Localization

@model LuceneSearchResultModel<DancingGoatSearchResultModel>
@{
    ViewData["Title"] = "Search";
    
    Dictionary<string, string> GetRouteData(int page) =>
        new Dictionary<string, string>() { { "query", Model.Query }, { "pageSize", Model.PageSize.ToString() }, { "page", page.ToString() } };
        
    Dictionary<string, string> GetFacetRouteData(string facet) =>
        new Dictionary<string, string>() { { "query", Model.Query }, { "pageSize", Model.PageSize.ToString() }, { "page", "1" }, { "facet", facet } };
}

<link rel="stylesheet" href="/Content/styles/search.css">

<div class="search-container">
    <h1>Search</h1>
    
    <div class="search-form">
        <form asp-action="Index" method="get" role="search">
            <div class="position-relative">
                <input 
                    type="text" 
                    class="search-input" 
                    placeholder="Search for articles, products, and more..." 
                    asp-for="@Model.Query" 
                    name="query" 
                    autocomplete="off"
                    autofocus="@(String.IsNullOrWhiteSpace(Model.Query) ? "autofocus" : null)">
                <input type="hidden" asp-for="@Model.PageSize" name="pageSize" />
                <button type="submit" class="search-submit" aria-label="Search">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="8"></circle>
                        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                    </svg>
                </button>
            </div>
        </form>
    </div>

    @if (!String.IsNullOrWhiteSpace(Model.Query))
    {
        <div class="search-meta">
            @if (Model.Hits.Any())
            {
                <p>Showing @(((Model.Page - 1) * Model.PageSize) + 1) - @(Math.Min(Model.Page * Model.PageSize, Model.TotalHits)) of @Model.TotalHits results for <strong>"@Model.Query"</strong></p>
            }
            
            <div class="search-facets">
                @if (Model.Facets != null && Model.Facets.Any())
                {
                    <div class="mb-2">Filter by:</div>
                    @foreach (var facet in Model.Facets)
                    {
                        <div class="search-facet">
                            <a href="@Url.Action("Index", GetFacetRouteData(facet.Label))" 
                               class="@(facet.Label == ViewContext.HttpContext.Request.Query["facet"] ? "active" : "")">
                                @facet.Label (@facet.Value)
                            </a>
                        </div>
                    }
                }
            </div>
           
        </div>
    }

    @if (!Model.Hits.Any())
    {
        <div class="no-results">
            @if (!String.IsNullOrWhiteSpace(Model.Query))
            {
                <div>
                    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="8"></circle>
                        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                        <line x1="8" y1="11" x2="14" y2="11"></line>
                    </svg>
                    <h2 class="mt-3">@HtmlLocalizer["Sorry, no results match {0}", Model.Query]</h2>
                    <p>Try different keywords or check your spelling</p>
                </div>
            }
            else
            {
                <div>
                    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="8"></circle>
                        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                    </svg>
                    <h2 class="mt-3">Enter a search term to begin</h2>
                    <p>Start typing in the search box above to find content</p>
                </div>
            }
        </div>
    }
    else
    {
        <div class="search-results">
            @foreach (var item in Model.Hits)
            {
                <div class="search-tile">
                    @if (!string.IsNullOrEmpty(item.ContentType))
                    {
                        <div class="search-tile-type">@item.ContentType</div>
                    }
                    <h3 class="search-tile-title">
                        <a href="@item.Url">@item.Title</a>
                    </h3>
                    
                    @* If you have additional fields in your search model, you can add them here
                    @if (!string.IsNullOrEmpty(item.Description))
                    {
                        <p class="search-tile-description">
                            @Html.Raw(item.Description)
                        </p>
                    }
                    *@
                </div>
            }
        </div>

        @if (Model.TotalPages > 1)
        {
            <div class="pagination-container">
                <ul class="pagination">
                    @if (Model.Page > 1)
                    {
                        <li>
                            <a asp-controller="Search" asp-all-route-data="GetRouteData(Model.Page - 1)" aria-label="Previous page">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M15 18l-6-6 6-6"/>
                                </svg>
                            </a>
                        </li>
                    }

                    @{
                        var startPage = Math.Max(1, Model.Page - 2);
                        var endPage = Math.Min(Model.TotalPages, startPage + 4);
                        
                        if (endPage - startPage < 4)
                        {
                            startPage = Math.Max(1, endPage - 4);
                        }
                    }
                    
                    @if (startPage > 1)
                    {
                        <li>
                            <a asp-controller="Search" asp-all-route-data="GetRouteData(1)">1</a>
                        </li>
                        
                        if (startPage > 2)
                        {
                            <li><span>...</span></li>
                        }
                    }

                    @for (int pageNumber = startPage; pageNumber <= endPage; pageNumber++)
                    {
                        if (pageNumber == Model.Page)
                        {
                            <li class="active">
                                <span>@pageNumber</span>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a asp-controller="Search" asp-all-route-data="GetRouteData(pageNumber)">@pageNumber</a>
                            </li>
                        }
                    }
                    
                    @if (endPage < Model.TotalPages)
                    {
                        if (endPage < Model.TotalPages - 1)
                        {
                            <li><span>...</span></li>
                        }
                        
                        <li>
                            <a asp-controller="Search" asp-all-route-data="GetRouteData(Model.TotalPages)">@Model.TotalPages</a>
                        </li>
                    }

                    @if (Model.Page < Model.TotalPages)
                    {
                        <li>
                            <a asp-controller="Search" asp-all-route-data="GetRouteData(Model.Page + 1)" aria-label="Next page">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M9 18l6-6-6-6"/>
                                </svg>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        }
    }
</div>
