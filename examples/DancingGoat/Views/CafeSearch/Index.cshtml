@using Kentico.Xperience.Lucene.Models
@using DancingGoat.Search

@model LuceneSearchResultModel<CafeSearchModel>

@{
    Dictionary<string, string> GetRouteData(int page) =>
        new()
        {
            { "query", Model.Query },
            { "pageSize", Model.PageSize.ToString() },
            { "page", page.ToString() },
            { "facet", Model.Facet }
        };
}

<h1>Search</h1>

<style>
    .form-field {
        margin-bottom: 0.8rem;
    }
</style>

<div class="row" style="padding: 1rem;">
    <div class="col-12">
        <form asp-action="Index" method="get">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-field">
                        <label class="control-label" asp-for="@Model.Query"></label>
                        <div class="editing-form-control-nested-control">
                            <input class="form-control" asp-for="@Model.Query" name="query">
                            <input type="hidden" asp-for="@Model.PageSize" name="pageSize"/>
                            <input type="hidden" asp-for="@Model.Page" name="page"/>
                            <input type="hidden" asp-for="@Model.Facet" name="facet"/>
                        </div>
                    </div>
                </div>
            </div>

            <input type="submit" value="Submit">

            @{
                var path = Model.Facet?.Split(';').Skip(1).ToArray() ?? Array.Empty<string>();
                var country = Model.Facets;
                var pathComponent = path.Length > 0 ? $@"{string.Join(";", path)};" : "";
                var pathUp = path.Length > 1 ? $@"Country;{string.Join(";", path.Take(path.Length-1))}" : "";
                var pathUpText = string.Join(" > ", path);  
            }
            @if (Model.Facet != null)
            {
                <a href="?query=@Model.Query&Facet=@pathUp" style="color:red;">@pathUpText â†‘</a>
            }
            @if (country != null)
            {
                @foreach (var facetResult in country)
                {
                    <a href="?query=@Model.Query&Facet=Country;@pathComponent@facetResult.Label">@facetResult.Label (@facetResult.Value)</a>
                }
            }
        </form>
    </div>
</div>

@if (!Model.Hits.Any())
{
    if (!String.IsNullOrWhiteSpace(Model.Query))
    {
        @HtmlLocalizer["Sorry, no results match {0}", Model.Query]
    }

    return;
}

@foreach (var item in Model.Hits)
{
    <div class="row search-tile">
        <div class="col-md-8 col-lg-9 search-tile-content">
            <h3 class="h4 search-tile-title">
                <a href="@item.Url">@item.Title</a>
            </h3>
            <div class="search-tile-subtitle">@item.CafeCountry / @item.CafeCity</div>
        </div>
    </div>
}

<div class="pagination-container">
    <ul class="pagination">
        @if (Model.Page > 1)
        {
            <li class="PagedList-skipToPrevious">
                <a asp-controller="Search" asp-all-route-data="GetRouteData(Model.Page - 1)">
                    @HtmlLocalizer["previous"]
                </a>
            </li>
        }

        @for (int pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
        {
            if (pageNumber == Model.Page)
            {
                <li class="active">
                    <span>
                        @pageNumber
                    </span>
                </li>
            }
            else
            {
                <li>
                    <a asp-controller="Search" asp-all-route-data="GetRouteData(pageNumber)">@pageNumber</a>
                </li>
            }
        }

        @if (Model.Page < Model.TotalPages)
        {
            <li class="PagedList-skipToNext">
                <a asp-controller="Search" asp-all-route-data="GetRouteData(Model.Page + 1)">
                    @HtmlLocalizer["next"]
                </a>
            </li>
        }
    </ul>
</div>