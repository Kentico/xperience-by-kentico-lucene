@using CMS.DocumentEngine;

@model DancingGoat.Models.ConsentViewModel

@inject IPageDataContextRetriever pageDataContextRetriever

@{
    string GetReturnUrl()
    {
        // Get URL for pages handled by content tree-based router, otherwise get path from the context
        return pageDataContextRetriever.TryRetrieve<TreeNode>(out var _) ?
            Url.Kentico().CurrentPageUrl() :
            (Context.Request.PathBase + Context.Request.Path).Value;
    }
}

<div id="consent" class="cookie-consent">
    @if (!Model.IsConsentAgreed)
    {

        var routeData = new Dictionary<string, string> { { "returnUrl", GetReturnUrl() } };

        <div class="consent-text">@HtmlLocalizer["Only system cookies are currently stored. Tracking of activities and analytics features are turned off."]</div>
        <div>
             @Html.Raw(@Model.ConsentShortText)
        </div>
        <form asp-action="Agree"
              asp-controller="Consent"
              asp-antiforgery="true"
              asp-all-route-data="routeData"
              class="consent-buttons">
            <input type="submit" value="@HtmlLocalizer["I agree"]" class="btn btn-default btn-consent">
        </form>
    }
    else
    {
        <div>
            @HtmlLocalizer["The website now stores cookies on your computer, tracks activity, creates personalized content and processes analytics. You can find more information on our"]
            <a href="@Url.Kentico().PageUrl(ContentItemIdentifiers.PRIVACY)">@HtmlLocalizer["privacy page"]</a>.
        </div>
    }
</div>
