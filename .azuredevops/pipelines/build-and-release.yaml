name: "$(Build.DefinitionName) #$(Build.BuildId)"

trigger: none # Manual Publish
pr: none # GitHub Actions handle PRs

pool:
  vmImage: windows-latest

resources:
  repositories:
    - repository: self
      type: git

variables:
  - name: SIGN_FILE
    value: true

stages:
  - stage: Build
    jobs:
      - job: Build
        displayName: Build, Sign, Test & Pack

        variables:
          - group: Code Sign KV Auth

          - name: Configuration
            value: Release

          - name: SIGN_FILE
            value: true

          - name: slnPath
            value: src/Kentico.Xperience.Lucene.Libs/Kentico.Xperience.Lucene.Libs.sln

        steps:
          - task: PowerShell@2
            displayName: Set Node.js version from package.json
            inputs:
              targetType: inline
              script: |
                $fileContent = Get-Content -Path 'src/Kentico.Xperience.Lucene.Admin/Client/package.json' -Raw
                $jsonObject = ConvertFrom-Json -InputObject $fileContent

                # Get the value of engines.node
                $enginesNode = $jsonObject.engines.node
                Write-Host "Required Node version $enginesNode"
                Write-Host "##vso[task.setvariable variable=PACKAGE_JSON_NODE_VERSION]$enginesNode"

          - task: UseNode@1
            displayName: "Install Node.js from package.json version"
            inputs:
              version: $(PACKAGE_JSON_NODE_VERSION)

          - task: DotNetCoreCLI@2
            displayName: Restore dotnet tools
            inputs:
              command: custom
              custom: tool
              arguments: restore
              workingDirectory: $(System.DefaultWorkingDirectory)

          - task: DotNetCoreCLI@2
            displayName: Restore dependencies
            inputs:
              command: restore
              projects: ${{ variables.slnPath }}
              feedsToUse: select
              restoreArguments: --locked-mode

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: ${{ variables.slnPath }}
              configuration: ${{ variables.Configuration }}
              arguments: --no-restore
            env:
              AuthenticodeClientSecret: $(AuthenticodeClientSecret)
              # Roll-forward behavior set for AzureSignTool dotnet tool (see .config\dotnet-tools.json) which requires .Net 6.0 runtime
              DOTNET_ROLL_FORWARD: Major

          - template: steps.yml
            parameters:
              Configuration: $(Configuration)
              artifacts:
                - CRMCommon:
                  artifactName: "Kentico-Xperience-Lucene"
                  projectPath: "src/Kentico.Xperience.Lucene"
                - CRMDynamics:
                  artifactName: "Kentico-Xperience-Lucene-Admin"
                  projectPath: "src/Kentico.Xperience.Lucene.Admin"
                - CRMSalesforce:
                  artifactName: "Kentico-Xperience-Lucene-Core"
                  projectPath: "src/Kentico.Xperience.Lucene.Core"

  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
      - stage: PublishNuGetPackages
        displayName: Publish NuGet packages
        dependsOn: Build

        jobs:
          - deployment: PublishNuGetPackages
            displayName: Publish NuGet packages

            environment: integrations-release-nuget
            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: none

                    - task: NuGetToolInstaller@1
                      displayName: Install latest nuget.exe
                      inputs:
                        versionSpec: ">=5.6"
                        checkLatest: true

                    - task: NuGetAuthenticate@1
                      displayName: NuGet Authenticate

                    - task: NuGetCommand@2
                      displayName: NuGet push
                      inputs:
                        command: push
                        packagesToPush: $(Pipeline.Workspace)/**/*.nupkg
                        nuGetFeedType: external
                        publishFeedCredentials: nuget.org
                        allowPackageConflicts: true
